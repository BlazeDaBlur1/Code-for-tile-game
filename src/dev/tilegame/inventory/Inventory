package dev.blaze.tilegame.inventory;

	import java.awt.Color;
	import java.awt.Graphics;
	import java.awt.event.KeyEvent;
	import java.util.ArrayList;
	
	import dev.blaze.tilegame.Handler;
	import dev.blaze.tilegame.crafting.Crafting;
	import dev.blaze.tilegame.gfx.*;
	import dev.blaze.tilegame.item.Item;
	
	public class Inventory {
	
		private Handler handler;
		private boolean active = false, cactive = false;
		public static ArrayList<Item> inventoryItems;
		
		public static int invX = 64, invY = 48,
				invWidth = 512, invHeight = 384,
				invListCenterX = invX + 171,
				invListCenterY = invY + invHeight / 2 + 5,
				invListSpacing = 30;
		
		public int invImageX = 452, 
				invImageY = 82,
				invImageWidth = 64,
				invImageHeight = 64;
		
		private int invCountX = 484, invCountY = 172;
		
		public static int i;
		
		public static int selectedItem = 0;
		private Crafting craft;
		
		public Inventory(Handler handler){
			this.handler = handler;
			inventoryItems = new ArrayList<Item>();
			craft = new Crafting(handler);
		}
		
		public boolean isActive() {
			return active;
		}
		
		public void tick(){
			craft.tick();
			if(handler.getKeyManager().keyJustPressed(KeyEvent.VK_E))
				active = !active;
			
			if(handler.getKeyManager().keyJustPressed(KeyEvent.VK_G)) {
				cactive = true;
				inventoryItems.removeAll(inventoryItems);
				if(inventoryItems.contains(Item.woodItem))
					handler.getWorld().getEntityManager().getPlayer().setMoney(
							handler.getWorld().getEntityManager().getPlayer().getMoney() + 20);
				if(inventoryItems.contains(Item.rockItem)) 
					handler.getWorld().getEntityManager().getPlayer().setMoney(
							handler.getWorld().getEntityManager().getPlayer().getMoney() + 40);
				if(inventoryItems.contains(Item.craftItem)) 
					handler.getWorld().getEntityManager().getPlayer().setMoney(
							handler.getWorld().getEntityManager().getPlayer().getMoney() + 100);
				cactive = false;
			}
			
			if(!active)
				return;
			
			if(inventoryItems.size() == 1 && handler.getWorld().getEntityManager().getPlayer().getXp() <= 99) {
				handler.getWorld().getEntityManager().getPlayer().setXp(handler.getWorld().getEntityManager().getPlayer().getXp() + 100);
			}
			
			if(handler.getKeyManager().keyJustPressed(KeyEvent.VK_UP)) {
				selectedItem--;
			}
			if(handler.getKeyManager().keyJustPressed(KeyEvent.VK_DOWN)) {
				selectedItem++;
			}
			
			if(selectedItem < 0) {
				selectedItem = inventoryItems.size() - 1;
			} else if(selectedItem >= inventoryItems.size()) {
				selectedItem = 0;
			}
		}
		
		public void render(Graphics g){
			if(!active)
				return;
			
			g.drawImage(Assets.inventoryScreen, invX, invY, invWidth, invHeight, null);
			
			int len = inventoryItems.size();
			if(len == 0) return;
			
			for(i = -5; i < 6; i++) {
				if(selectedItem + i < 0 || selectedItem + i >= len) continue;
				
				if(i == 0) {
					Text.drawString(g, "> " + inventoryItems.get(selectedItem + i).getName() + " <", invListCenterX, 
							invListCenterY + i * invListSpacing, true, Color.yellow, Assets.font28);
					if(inventoryItems.get(selectedItem + i).getName() == "Crafting Table" && 
							handler.getKeyManager().keyJustPressed(KeyEvent.VK_ENTER)) {
						craft.render(g);
					}
				} else {
					Text.drawString(g, inventoryItems.get(selectedItem + i).getName(), invListCenterX, 
							invListCenterY + i * invListSpacing, true, Color.WHITE, Assets.font28);
				}
			}
			
			Item item = inventoryItems.get(selectedItem);
			g.drawImage(item.getTexture(), invImageX, invImageY, invImageWidth, invImageHeight, null);
			Text.drawString(g, Integer.toString(item.getCount()), invCountX, invCountY, true, Color.WHITE, Assets.font28);
			
			if(handler.getMouseManager().isLeftPressed() && 
					handler.getMouseManager().getMouseX() >= 383 + invX && handler.getMouseManager().getMouseX() <= 457 + invX &&
					handler.getMouseManager().getMouseY() >= 28 + invY && handler.getMouseManager().getMouseY() <= 101 + invY) {
				Text.drawString(g, "Working!", 456, 56, true, Color.RED, Assets.font28);
			}
		}
		
		// Inventory methods
		
		public void addItem(Item item){
			for(Item i : inventoryItems) {
				if(i.getId() == item.getId()) {
					i.setCount(i.getCount() + item.getCount());
					return;
				}
			}
			inventoryItems.add(item); 
		}
		
		// GETTERS SETTERS
	
		public Handler getHandler() {
			return handler;
		}
	
		public void setHandler(Handler handler) {
			this.handler = handler;
		}
		
	}
